generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  id          String       @id @default(uuid())
  pickup      Json
  dropoff     Json
  weight      Int
  windowStart DateTime
  windowEnd   DateTime
  status      String       @default("pending")
  customerId    String?      @default("")
  trackingToken String?       @default(uuid())
  assignments Assignment[]
  eventsLogs   EventLog[]
}

model Driver {
  id          String       @id @default(uuid())
  name        String
  vehicleCap  Int
  status      String       @default("available")
  lastLat     Float?
  lastLng     Float?
  assignments Assignment[]
}

model Assignment {
  id         String   @id @default(uuid())
  orderId    String
  driverId   String
  eta        DateTime
  assignedAt DateTime @default(now())
  driver     Driver   @relation(fields: [driverId], references: [id])
  order      Order    @relation(fields: [orderId], references: [id])
}

model EventLog {
  id        String   @id @default(uuid())
  orderId   String
  type      String
  payload   Json
  createdAt DateTime @default(now())
  order     Order    @relation(fields: [orderId], references: [id])
}

model Message {
  id         String   @id @default(uuid())
  fromUserId String
  participants String[]
  toUserId   String
  orderId    String?
  content    String
  createdAt  DateTime @default(now())


  @@index([orderId, fromUserId, toUserId]) 
}

model EtaHistory {
  id           String   @id @default(uuid())
  orderId      String
  driverId     String
  distanceKm   Float
  etaMinutes   Int
  actualMinutes Int
  createdAt    DateTime @default(now())
}
